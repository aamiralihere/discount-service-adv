package com.retailstore.discountservice.service;import com.retailstore.discountservice.model.User;import com.retailstore.discountservice.model.User;import com.retailstore.discountservice.repository.UserRepository;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import java.time.LocalDateTime;@Service@Slf4jpublic class UserService {    private UserRepository userRepository;    @Autowired    public UserService(UserRepository userRepository) {        this.userRepository = userRepository;    }    public User createUser(User user) {        log.info("Inside createUser method of UserService");        return userRepository.save(user);    }    public User updateUser(User user) {        log.info("Inside updateUser method of UserService");        //TODO        return userRepository.save(user);    }    public Iterable<User> getAllUsers() {        log.info("Inside getAllUsers method of UserService");        return userRepository.findAll();    }    public void deleteUser(User user) {        log.info("Inside deleteUser method of UserService");        userRepository.delete(user);    }    public User getUser(Long id) {        log.info("Inside getUser method of UserService");        return userRepository.findById(id).orElse(null);    }    public Boolean isOverTwoYearsOldCustomer(User user) {        return user.getCreatedDate().isBefore(LocalDateTime.now().minusYears(2));    }}